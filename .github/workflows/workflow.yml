name: Workflow
on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Should this run deploy image"
        required: false
        default: 'false'
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  build:
    runs-on: "windows-2019"
    env:
      registry: docker.io/
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Show machine info
      run: |
        Get-Volume
        docker image ls
        docker container ls
        docker container ls --all
    - name: Install prerequisites
      run: |
        choco install make
    - name: Set environment
      run: |
        $COMMIT_MSG=(git log --format=%B -n 1)[0]
        $COMMIT_MSG_HAS_DEPLOY=$COMMIT_MSG.StartsWith("[DEPLOY]")
        $IS_DEPLOY="${{ github.event_name }}".Equals("push") -and $COMMIT_MSG_HAS_DEPLOY
        $IS_DEPLOY=$IS_DEPLOY -or ("${{ github.event_name }}".Equals("workflow_dispatch") -and "${{ github.event.inputs.deploy }}".Equals("true"))
        $WILL_BE_DEPLOYED=$COMMIT_MSG_HAS_DEPLOY -or $IS_DEPLOY
        "IS_DEPLOY=$IS_DEPLOY" >> $env:GITHUB_ENV
        "WILL_BE_DEPLOYED=$WILL_BE_DEPLOYED" >> $env:GITHUB_ENV

        $IMAGE_NAME=$(make --silent docker_image_name)
        $IMAGE_TAG=$(make --silent docker_image_tag)
        $IMAGE_VERSION=$(make --silent docker_image_version)
        "IMAGE_NAME=$IMAGE_NAME" >> $env:GITHUB_ENV
        "IMAGE_TAG=$IMAGE_TAG" >> $env:GITHUB_ENV
        "IMAGE_VERSION=$IMAGE_VERSION" >> $env:GITHUB_ENV

        $REMOTE_IMAGE_NAME="$env:registry" + $IMAGE_NAME
        $REMOTE_IMAGE_TAG="$env:registry" + $IMAGE_TAG
        $REMOTE_IMAGE_LATEST=$REMOTE_IMAGE_NAME + ":latest"
        "REMOTE_IMAGE_NAME=$REMOTE_IMAGE_NAME" >> $env:GITHUB_ENV
        "REMOTE_IMAGE_TAG=$REMOTE_IMAGE_TAG" >> $env:GITHUB_ENV
        "REMOTE_IMAGE_LATEST=$REMOTE_IMAGE_LATEST" >> $env:GITHUB_ENV

        "DOCKER_ISOLATION=process" >> $env:GITHUB_ENV
    - name: "Login to image registry"
      uses: docker/login-action@v1
      with:
        registry: ${{ env.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOCKEN }}
    - name: Download cache
      # Here we assume that latest release have common layers that should speed up our build
      run: |
        docker manifest inspect $env:REMOTE_IMAGE_LATEST | Out-Null
        if($?) {
          docker pull $env:REMOTE_IMAGE_LATEST
        }
        else {
          Write-Output "Cache was not loaded"
          exit 0
        }
    - name: Build
      run: |
        $env:DOCKER_CACHE_FROM=$env:REMOTE_IMAGE_LATEST
        make $env:IMAGE_NAME
    - name: Test
      run: make check
    - name: Clean
      run: make clean
    - name: Show machine info
      run: |
        Get-Volume
        docker image ls
        docker container ls
        docker container ls --all
    - name: "[DEPLOY] Check there is not already such tag in registry"
      if: env.WILL_BE_DEPLOYED == 'true'
      run: |
        docker manifest inspect $env:REMOTE_IMAGE_TAG | Out-Null
        if($?) { throw "Found image with same tag in registry!"; }
        exit 0
    - name: "[DEPLOY] Push image to registry"
      if: env.IS_DEPLOY == 'true'
      run: |
        docker image tag $env:IMAGE_TAG $env:REMOTE_IMAGE_TAG
        docker image tag $env:IMAGE_TAG $env:REMOTE_IMAGE_LATEST
        docker image push $env:REMOTE_IMAGE_TAG
        docker image push $env:REMOTE_IMAGE_LATEST
    - name: "[DEPLOY] Tag commit"
      if: env.IS_DEPLOY == 'true'
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: "v${{ env.IMAGE_VERSION }}"
