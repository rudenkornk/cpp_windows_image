name: Workflow
on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Should this run deploy image"
        required: false
        default: 'false'
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  build:
    runs-on: "windows-2019"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Show machine info
      run: |
        Get-Volume
        docker image ls
        docker container ls
        docker container ls --all
    - name: Install prerequisites
      run: |
        choco install make
    - name: Set environment
      run: |
        $COMMIT_MSG=(git log --format=%B -n 1)[0]
        $COMMIT_MSG_HAS_DEPLOY=$COMMIT_MSG.StartsWith("[DEPLOY]")
        $IS_DEPLOY="${{ github.event_name }}".Equals("push") -and $COMMIT_MSG_HAS_DEPLOY
        $IS_DEPLOY=$IS_DEPLOY -or ("${{ github.event_name }}".Equals("workflow_dispatch") -and "${{ github.event.inputs.deploy }}".Equals("true"))
        $WILL_BE_DEPLOYED=$COMMIT_MSG_HAS_DEPLOY -or $IS_DEPLOY
        "DOCKER_ISOLATION=process" >> $env:GITHUB_ENV
        "IMAGE_NAME=$(make --silent docker_image_name)" >> $env:GITHUB_ENV
        "IMAGE_TAG=$(make --silent docker_image_tag)" >> $env:GITHUB_ENV
        "IMAGE_VERSION=$(make --silent docker_image_version)" >> $env:GITHUB_ENV
        "IS_DEPLOY=$IS_DEPLOY" >> $env:GITHUB_ENV
        "WILL_BE_DEPLOYED=$WILL_BE_DEPLOYED" >> $env:GITHUB_ENV
    - name: "Login to Docker Hub"
      uses: docker/login-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOCKEN }}
    - name: Download cache from Docker Hub
      # Here we assume that latest release have common layers that should speed up our build
      run: |
        docker manifest inspect ("$env:IMAGE_NAME" + ":latest") | Out-Null
        if($?) {
          docker pull ("$env:IMAGE_NAME" + ":latest")
        }
        else {
          Write-Output "Cache was not loaded"
          exit 0
        }
    - name: Build
      run: |
        $env:DOCKER_CACHE_FROM="$env:IMAGE_NAME" + ":latest";
        make $env:IMAGE_NAME
    - name: Test
      run: make check
    - name: Clean
      run: make clean
    - name: Show machine info
      run: |
        Get-Volume
        docker image ls
        docker container ls
        docker container ls --all
    - name: "[DEPLOY] Check there is not already such tag on Docker Hub"
      if: env.WILL_BE_DEPLOYED == 'true'
      run: |
        docker manifest inspect $env:IMAGE_TAG | Out-Null
        if($?) { throw "Found image with same tag on docker hub!"; }
        exit 0
    - name: "[DEPLOY] Push image to Docker Hub"
      if: env.IS_DEPLOY == 'true'
      run: |
        docker tag $env:IMAGE_TAG ("$env:IMAGE_NAME" + ":latest")
        docker push $env:IMAGE_TAG
        docker push ("$env:IMAGE_NAME" + ":latest")
    - name: "[DEPLOY] Tag commit"
      if: env.IS_DEPLOY == 'true'
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: "v${{ env.IMAGE_VERSION }}"
